@using Microsoft.AspNetCore.Html
@model IEnumerable<VideoGames.MVC.Models.OrderModel>

@{
    ViewData["Title"] = "Siparişlerim";
}

<div class="container mt-4">
    <h2 class="mb-4">Siparişlerim</h2>

    @if (Model != null && Model.Any())
    {
        foreach (var order in Model)
        {
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        Sipariş ID: @order.Id <br />
                        Tarih: @order.CreatedDate.ToString("dd.MM.yyyy")
                    </div>
                    <div>
                        @GetOrderStatusBadge(order.OrderStatus)
                    </div>
                </div>

                <div class="card-body">
                    <p>Toplam Tutar: @order.TotalAmount ₺</p>
                    <a href="@Url.Action("Details", "Order", new { id = order.Id })" class="btn btn-primary">
                        Detayları Görüntüle
                    </a>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">
            Henüz hiç siparişiniz bulunmamaktadır.
        </div>
    }
</div>

@functions {
    private IHtmlContent GetOrderStatusBadge(VideoGames.MVC.ComplexTypes.OrderStatus status)
    {
        string badgeClass;
        string text;

        switch (status)
        {
            case VideoGames.MVC.ComplexTypes.OrderStatus.Pending:
                badgeClass = "badge bg-secondary";
                text = "Bekliyor";
                break;
            case VideoGames.MVC.ComplexTypes.OrderStatus.Processing:
                badgeClass = "badge bg-secondary";
                text = "İşleniyor";
                break;
            case VideoGames.MVC.ComplexTypes.OrderStatus.Delivered:
                badgeClass = "badge bg-success";
                text = "Teslim Edildi";
                break;
            case VideoGames.MVC.ComplexTypes.OrderStatus.Cancelled:
                badgeClass = "badge bg-danger";
                text = "İptal Edildi";
                break;
            case VideoGames.MVC.ComplexTypes.OrderStatus.Returned:
                badgeClass = "badge bg-secondary";
                text = "Bekliyor";
                break;
            default:
                badgeClass = "badge bg-dark";
                text = "Bilinmiyor";
                break;
        }

        return new HtmlString($"<span class='{badgeClass}'>{text}</span>");
    }
}
